"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const socket_io_client_1 = __importDefault(require("socket.io-client"));
const readline_1 = __importDefault(require("readline"));
const config_json_1 = __importDefault(require("../config.json"));
const FileManager_1 = require("./FileManager");
const input = readline_1.default.createInterface({
    input: process.stdin,
    output: process.stdout
});
const USERNAME = config_json_1.default.user.username || "client";
const PASSWORD = config_json_1.default.user.password || "12345";
const SERVER_URL = config_json_1.default.server || "ws://localhost:8080";
const DESTINATION = config_json_1.default.destination || "client2";
const DIRECTORY_PATH = config_json_1.default.watcher.dir || "";
const FILE_TYPES = config_json_1.default.watcher.types || [];
// Socket Connection
const socket = socket_io_client_1.default(SERVER_URL, {
    autoConnect: false,
    query: {
        username: USERNAME,
        password: PASSWORD
    },
    reconnection: false
});
// Binding Events
socket.on("connect", onConnect);
socket.on("disconnect", onDisconnect);
socket.on("note", onNote);
socket.on("msg", onMessage);
socket.on("file", onFile);
// Initiate socket connection
console.log("[LOCAL]: Connecting...");
socket.connect();
// File Watcher
FileManager_1.StartFileWatcher(DIRECTORY_PATH, FILE_TYPES, (file) => {
    sendFile(socket, file);
}).catch(() => console.log("---- FileManager Error ----"));
// Event Handling Methods
function onConnect() {
    console.log("[LOCAL]: Authenticating...");
}
function onDisconnect() {
    console.log("[LOCAL]: Disconnected from the SERVER!");
}
function onNote({ code, msg }) {
    if (code == "TICK") {
        console.log(msg);
        return;
    }
    console.log(`[SERVER][${code}]: ${msg}`);
}
function onMessage({ from, content }) {
    console.log(`[CHAT][${from}]: ${content}`);
}
function onFile({ from, file }) {
    console.log(`[FILE][RECEIVED]: from ${from}, name ${file.name}`);
    if (from == DESTINATION) {
        FileManager_1.FileWriteContent(file);
    }
    else {
        console.log(`[FILE][WARN]: A file is received from unknown destination, ${from}`);
    }
}
// Communicating Methods
const sendMessage = (socket, content) => {
    socket.emit("message", { from: USERNAME, to: DESTINATION, content: content });
};
const sendFile = (socket, file) => {
    socket.emit("file", { from: USERNAME, to: DESTINATION, file: file });
    console.log(`[LOCAL][FILE]: ${file.name} is uploaded.`);
};
// commandline input listener
const listener = () => {
    input.question("", (answer) => {
        if (answer.length > 0)
            sendMessage(socket, answer);
        setTimeout(listener, 0);
    });
};
listener();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC9DbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx3RUFBa0M7QUFDbEMsd0RBQWdDO0FBQ2hDLGlFQUFvQztBQUVwQywrQ0FBbUU7QUFHbkUsTUFBTSxLQUFLLEdBQUcsa0JBQVEsQ0FBQyxlQUFlLENBQUM7SUFDL0IsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO0lBQ3BCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtDQUN6QixDQUNKLENBQUM7QUFLRixNQUFNLFFBQVEsR0FBRyxxQkFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDO0FBQ2xELE1BQU0sUUFBUSxHQUFHLHFCQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUM7QUFFakQsTUFBTSxVQUFVLEdBQUcscUJBQU0sQ0FBQyxNQUFNLElBQUkscUJBQXFCLENBQUM7QUFDMUQsTUFBTSxXQUFXLEdBQUcscUJBQU0sQ0FBQyxXQUFXLElBQUksU0FBUyxDQUFDO0FBRXBELE1BQU0sY0FBYyxHQUFHLHFCQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7QUFDaEQsTUFBTSxVQUFVLEdBQUcscUJBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztBQUU5QyxvQkFBb0I7QUFDcEIsTUFBTSxNQUFNLEdBQUcsMEJBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDMUIsV0FBVyxFQUFFLEtBQUs7SUFDbEIsS0FBSyxFQUFFO1FBQ0gsUUFBUSxFQUFFLFFBQVE7UUFDbEIsUUFBUSxFQUFFLFFBQVE7S0FDckI7SUFDRCxZQUFZLEVBQUUsS0FBSztDQUN0QixDQUFDLENBQUM7QUFFSCxpQkFBaUI7QUFDakIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDaEMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDdEMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDMUIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFMUIsNkJBQTZCO0FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQztBQUN0QyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7QUFFakIsZUFBZTtBQUNmLDhCQUFnQixDQUFDLGNBQWMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxJQUFpQixFQUFFLEVBQUU7SUFDL0QsUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUM7QUFFM0QseUJBQXlCO0FBQ3pCLFNBQVMsU0FBUztJQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0NBQXdDLENBQUMsQ0FBQztBQUMxRCxDQUFDO0FBRUQsU0FBUyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFXO0lBQ2xDLElBQUksSUFBSSxJQUFJLE1BQU0sRUFBRTtRQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLE9BQU87S0FDVjtJQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFlO0lBQzdDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLE1BQU0sT0FBTyxFQUFFLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBRUQsU0FBUyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFlO0lBQ3ZDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLElBQUksVUFBVSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNqRSxJQUFJLElBQUksSUFBSSxXQUFXLEVBQUU7UUFDckIsOEJBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDMUI7U0FBTTtRQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsOERBQThELElBQUksRUFBRSxDQUFDLENBQUM7S0FDckY7QUFDTCxDQUFDO0FBRUQsd0JBQXdCO0FBQ3hCLE1BQU0sV0FBVyxHQUFHLENBQUMsTUFBYyxFQUFFLE9BQWUsRUFBRSxFQUFFO0lBQ3BELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQ2xGLENBQUMsQ0FBQztBQUVGLE1BQU0sUUFBUSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQWlCLEVBQUUsRUFBRTtJQUNuRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNyRSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixJQUFJLENBQUMsSUFBSSxlQUFlLENBQUMsQ0FBQztBQUM1RCxDQUFDLENBQUM7QUFFRiw2QkFBNkI7QUFDN0IsTUFBTSxRQUFRLEdBQUcsR0FBRyxFQUFFO0lBQ2xCLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDMUIsSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDakIsV0FBVyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNoQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzVCLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBQ0YsUUFBUSxFQUFFLENBQUMifQ==