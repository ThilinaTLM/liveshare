"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const socket_io_client_1 = __importDefault(require("socket.io-client"));
const readline_1 = __importDefault(require("readline"));
const config_json_1 = __importDefault(require("../config.json"));
const FileManager_1 = require("./FileManager");
const input = readline_1.default.createInterface({
    input: process.stdin,
    output: process.stdout
});
const USERNAME = config_json_1.default.user.username || "client";
const PASSWORD = config_json_1.default.user.password || "12345";
const SERVER_URL = config_json_1.default.server || "ws://localhost:8080";
const DESTINATION = config_json_1.default.destination || "client2";
const DIRECTORY_PATH = config_json_1.default.watcher.dir || "";
const FILE_TYPES = config_json_1.default.watcher.types || [];
// Socket Connection
const socket = socket_io_client_1.default(SERVER_URL, {
    autoConnect: false,
    query: {
        username: USERNAME,
        password: PASSWORD
    },
    reconnection: false
});
// Binding Events
socket.on("connect", onConnect);
socket.on("disconnect", onDisconnect);
socket.on("note", onNote);
socket.on("msg", onMessage);
socket.on("file", onFile);
// Initiate socket connection
socket.connect();
// File Watcher
FileManager_1.StartFileWatcher(DIRECTORY_PATH, FILE_TYPES, (file) => {
    sendFile(socket, file);
}).catch(() => console.log("---- FileManager Error ----"));
// Event Handling Methods
function onConnect() {
    console.log("[LOCAL]: Trying to authenticate...");
}
function onDisconnect() {
    console.log("[LOCAL]: Disconnected from the server!");
}
function onNote({ code, msg }) {
    if (code == "TICK") {
        console.log(msg);
        return;
    }
    console.log(`[SERVER][${code}]: ${msg}`);
}
function onMessage({ from, content }) {
    console.log(`[CHAT][${from}]: ${content}`);
}
function onFile({ from, file }) {
    console.log(`[FILE][RECEIVED]: from ${from}, name ${file.name}`);
    if (from == DESTINATION) {
        FileManager_1.FileWriteContent(file);
    }
    else {
        console.log(`[FILE][WARN]: A file is received from unknown destination, ${from}`);
    }
}
// Communicating Methods
const sendMessage = (socket, content) => {
    socket.emit("message", { from: USERNAME, to: DESTINATION, content: content });
};
const sendFile = (socket, file) => {
    socket.emit("file", { from: USERNAME, to: DESTINATION, file: file });
    console.log(`[LOCAL][FILE]: ${file.name} is uploaded.`);
};
// commandline input listener
const listener = () => {
    reconnectSocket();
    input.question("", (answer) => {
        sendMessage(socket, answer);
        setTimeout(listener, 0);
    });
};
listener();
function reconnectSocket() {
    if (socket.disconnected) {
        socket.connect();
        console.log("[LOCAL]: Reconnecting...");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC9DbGllbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx3RUFBa0M7QUFDbEMsd0RBQWdDO0FBQ2hDLGlFQUFvQztBQUVwQywrQ0FBbUU7QUFHbkUsTUFBTSxLQUFLLEdBQUcsa0JBQVEsQ0FBQyxlQUFlLENBQUM7SUFDL0IsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO0lBQ3BCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtDQUN6QixDQUNKLENBQUM7QUFLRixNQUFNLFFBQVEsR0FBRyxxQkFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDO0FBQ2xELE1BQU0sUUFBUSxHQUFHLHFCQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUM7QUFFakQsTUFBTSxVQUFVLEdBQUcscUJBQU0sQ0FBQyxNQUFNLElBQUkscUJBQXFCLENBQUM7QUFDMUQsTUFBTSxXQUFXLEdBQUcscUJBQU0sQ0FBQyxXQUFXLElBQUksU0FBUyxDQUFDO0FBRXBELE1BQU0sY0FBYyxHQUFHLHFCQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7QUFDaEQsTUFBTSxVQUFVLEdBQUcscUJBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztBQUU5QyxvQkFBb0I7QUFDcEIsTUFBTSxNQUFNLEdBQUcsMEJBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDMUIsV0FBVyxFQUFFLEtBQUs7SUFDbEIsS0FBSyxFQUFFO1FBQ0gsUUFBUSxFQUFFLFFBQVE7UUFDbEIsUUFBUSxFQUFFLFFBQVE7S0FDckI7SUFDRCxZQUFZLEVBQUUsS0FBSztDQUN0QixDQUFDLENBQUM7QUFFSCxpQkFBaUI7QUFDakIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDaEMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDdEMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDMUIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFMUIsNkJBQTZCO0FBQzdCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUVqQixlQUFlO0FBQ2YsOEJBQWdCLENBQUMsY0FBYyxFQUFFLFVBQVUsRUFBRSxDQUFDLElBQWlCLEVBQUUsRUFBRTtJQUMvRCxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQztBQUUzRCx5QkFBeUI7QUFDekIsU0FBUyxTQUFTO0lBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0FBQ3RELENBQUM7QUFFRCxTQUFTLFlBQVk7SUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFBO0FBQ3pELENBQUM7QUFFRCxTQUFTLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQVc7SUFDbEMsSUFBSSxJQUFJLElBQUksTUFBTSxFQUFFO1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDaEIsT0FBTztLQUNWO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQWU7SUFDN0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksTUFBTSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFFRCxTQUFTLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQWU7SUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsSUFBSSxVQUFVLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ2pFLElBQUksSUFBSSxJQUFJLFdBQVcsRUFBRTtRQUNyQiw4QkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMxQjtTQUFNO1FBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyw4REFBOEQsSUFBSSxFQUFFLENBQUMsQ0FBQTtLQUNwRjtBQUNMLENBQUM7QUFFRCx3QkFBd0I7QUFDeEIsTUFBTSxXQUFXLEdBQUcsQ0FBQyxNQUFjLEVBQUUsT0FBZSxFQUFFLEVBQUU7SUFDcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFDbEYsQ0FBQyxDQUFDO0FBRUYsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFjLEVBQUUsSUFBaUIsRUFBRSxFQUFFO0lBQ25ELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3JFLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksQ0FBQyxJQUFJLGVBQWUsQ0FBQyxDQUFDO0FBQzVELENBQUMsQ0FBQztBQUVGLDZCQUE2QjtBQUM3QixNQUFNLFFBQVEsR0FBRyxHQUFHLEVBQUU7SUFDbEIsZUFBZSxFQUFFLENBQUM7SUFDbEIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUMxQixXQUFXLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzVCLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUIsQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDLENBQUE7QUFDRCxRQUFRLEVBQUUsQ0FBQztBQUVYLFNBQVMsZUFBZTtJQUNwQixJQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUU7UUFDckIsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQTtLQUMxQztBQUNMLENBQUMifQ==